{"version":3,"sources":["components/ModalComponent.jsx","Announcement_actions/AddAnnouncement.jsx","redux/ActionCreators.js","redux/ActionTypes.js","Announcement_actions/EditAnnouncement.jsx","Announcement_actions/FindSimilar.jsx","Announcement_actions/DeleteAnnouncement.jsx","components/RenderAnnouncementComponent.jsx","components/AnnouncementListComponent.jsx","components/HeaderComponent.jsx","components/AnnouncementDetailComponent.jsx","redux/selectors.js","Home/Home.jsx","components/MainComponent.jsx","App.js","serviceWorker.js","redux/reducers.js","redux/configureStore.js","index.js"],"names":["MyModal","props","useState","isModalOpen","setIsModalOpen","toggleModal","faIconClassName","faIcon","Button","className","btnClassName","color","btnColor","outline","onClick","Modal","isOpen","toggle","ModalHeader","submitBtnText","ModalBody","Form","FormGroup","Label","htmlFor","valueNeeded","Input","type","id","name","value","title","onChange","onTitleChanged","defValueNeeded","defaultValue","description","onDescChanged","onBtnClicked","connect","dispatch","setTitle","setDescription","e","target","payload","ID","nanoid","date","Date","toDateString","ann","FindSimilar","announcements","selectedAnn","all_words_count","Map","map","title_word_count","desc_words_count","i","split","length","j","set","annID_list","sorted_map","entries","sort","a","b","key","push","delete","Math","min","find","divClass","cardClass","fullText","class","annId","deleteAnnouncement","onDelete","RenderAnnouncement","Card","style","borderRadius","border","CardHeader","tag","deleteBtnNeeded","editBtnNeeded","to","textDecoration","CardBody","CardText","substring","CardFooter","edited","AnnouncementList","rendered_anns","Header","Navbar","dark","NavbarBrand","href","searchNeeded","handleChange","placeholder","state","match","params","Breadcrumb","BreadcrumbItem","active","selectAnnouncements","searchItem","setSearchItem","event","filter","toLowerCase","includes","Main","path","component","AnnouncementDetailComponent","App","Component","Boolean","window","location","hostname","initialState","store","createStore","action","Object","assign","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b742f8c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Button } from 'reactstrap';\n\n\nconst MyModal = (props) => {\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n    const faIconClassName = 'fa fa-' + props.faIcon;\n\n    return (\n        <div>\n            <Button\n                className={props.btnClassName}\n                color={props.btnColor}\n                outline onClick={toggleModal}\n            >\n                <span className={faIconClassName} />\n            </Button>\n            <Modal\n                isOpen={isModalOpen}\n                toggle={toggleModal}\n            >\n                <ModalHeader toggle={toggleModal}>\n                    {props.submitBtnText} Announcement\n                </ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label htmlFor=\"title\"> Title </Label>\n                            {props.valueNeeded ?\n                                <Input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    value={props.title}\n                                    onChange={props.onTitleChanged}\n                                />\n                            : null}\n                            {props.defValueNeeded?\n                                <Input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    defaultValue={props.title}\n                                    onChange={props.onTitleChanged}\n                                />\n                            : null}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor=\"description\"> Description </Label>\n                            {props.valueNeeded ?\n                                <Input\n                                    type=\"textarea\"\n                                    id=\"description\"\n                                    name=\"description\"\n                                    value={props.description}\n                                    onChange={props.onDescChanged}\n                                />\n                            : null}\n                            {props.defValueNeeded ?\n                                <Input\n                                    type=\"textarea\"\n                                    id=\"description\"\n                                    name=\"description\"\n                                    defaultValue={props.description}\n                                    onChange={props.onDescChanged}\n                                />\n                            : null}\n                        </FormGroup>\n                        <Button\n                            type=\"button\"\n                            value=\"submit\"\n                            color=\"primary\"\n                            onClick={() => {props.onBtnClicked(); toggleModal()}}\n                        >\n                            {props.submitBtnText}\n                        </Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n}\nexport default MyModal;\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addAnnouncement } from '../redux/ActionCreators';\nimport MyModal from '../components/ModalComponent';\n\n\nconst AddAnnouncement = ({ dispatch }) => {\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onDescChanged = e => setDescription(e.target.value)\n\n\n    const onSubmitClicked = () => {\n        if (title && description) {\n            dispatch(\n                addAnnouncement({\n                    ID: nanoid(),\n                    title,\n                    description,\n                    date: new Date().toDateString()\n                })\n            );\n            setTitle('');\n            setDescription('');\n        }\n    }\n\n    return (\n        <MyModal\n            submitBtnText=\"Add\"\n            faIcon=\"plus\"\n            btnClassName=\"mt-3\"\n            btnColor=\"primary\"\n            onTitleChanged={onTitleChanged}\n            onDescChanged={onDescChanged}\n            onBtnClicked={onSubmitClicked}\n            valueNeeded={true}\n            title={title}\n            description={description}\n        />\n    );\n}\nexport default connect()(AddAnnouncement);\n","import * as ActionTypes from './ActionTypes';\n\nexport const addAnnouncement = ann => ({\n    type: ActionTypes.ADD_ANNOUNCEMENT,\n    payload: ann\n});\n\nexport const editAnnouncement = editedAnn => ({\n    type: ActionTypes.EDIT_ANNOUNCEMENT,\n    payload: editedAnn\n});\n\nexport const deleteAnnouncement = annId => ({\n     type: ActionTypes.DELETE_ANNOUNCEMENT,\n     payload: annId\n });\n","\nexport const ADD_ANNOUNCEMENT = 'ADD_ANNOUNCEMENT';\nexport const EDIT_ANNOUNCEMENT = 'EDIT_ANNOUNCEMENT';\nexport const DELETE_ANNOUNCEMENT = 'DELETE_ANNOUNCEMENT';\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { editAnnouncement } from '../redux/ActionCreators';\nimport MyModal from '../components/ModalComponent';\n\n\nconst EditAnnouncement = ({ dispatch, ann }) => {\n    const [title, setTitle] = useState(ann.title);\n    const [description, setDescription] = useState(ann.description);\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onDescChanged = e => setDescription(e.target.value)\n\n    const onEditClicked = () => {\n          dispatch(editAnnouncement({\n              ID: ann.ID,\n              title,\n              description\n          }));\n    }\n\n    return (\n        <MyModal\n            submitBtnText=\"Edit\"\n            faIcon=\"pencil\"\n            btnClassName=\"float-right\"\n            btnColor=\"secondary\"\n            onBtnClicked={onEditClicked}\n            onTitleChanged={onTitleChanged}\n            onDescChanged={onDescChanged}\n            defValueNeeded={true}\n            title={ann.title}\n            description={ann.description}\n        />\n    );\n}\nexport default connect()(EditAnnouncement);","import React from 'react';\nimport {RenderAnnouncement} from '../components';\n\n\nconst FindSimilar = ({announcements, selectedAnn}) => {\n    let all_words_count = new Map();\n\n    announcements.map((ann) => {\n        let title_word_count = 0;\n        let desc_words_count = 0;\n\n        if(selectedAnn.ID !== ann.ID) {\n            for (let i = 0; i < selectedAnn.title.split(' ').length; i++) {\n                for (let j = 0; j < ann.title.split(' ').length; j++) {\n                    if (selectedAnn.title.split(' ')[i] === ann.title.split(' ')[j]) {\n                        title_word_count++;\n                    }\n                }\n            }\n            for (let i = 0; i < selectedAnn.description.split(' ').length; i++) {\n                for (let j = 0; j < ann.description.split(' ').length; j++) {\n                    if (selectedAnn.description.split(' ')[i] ===  ann.description.split(' ')[j]) {\n                        desc_words_count++;\n                    }\n                }\n            }\n            all_words_count.set(ann.ID, title_word_count + desc_words_count)\n        }\n        return null;\n    });\n\n    let annID_list = [];\n    let sorted_map = new Map([...all_words_count.entries()].sort((a, b) => b[1] - a[1]));\n        for(let [key, value] of sorted_map.entries()) {\n            if(value > 1){\n                    annID_list.push(key);\n                    sorted_map.delete(key);\n                }\n            }\n    annID_list.length = Math.min(annID_list.length, 3)\n\n        if (annID_list.length > 0) {\n            return annID_list.map((ID) => {\n                const ann = announcements.find(ann => ann.ID === ID);\n                return (\n                    <div\n                        key={ann.ID}\n                        className=\"col-12\"\n                    >\n                        <RenderAnnouncement\n                            ann={ann}\n                            divClass=\"mt-3\"\n                            cardClass=\"text-center mt-2\"\n                            fullText={false}\n                        />\n                    </div>\n                );\n            });\n        }\n        return (<h3 class=\"text-center\"> No Similar Announcements Were Found :( </h3>);\n    // }\n}\n\nexport default FindSimilar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap'\nimport { deleteAnnouncement } from '../redux/ActionCreators';\n\n\nconst DeleteAnnouncement = ({dispatch, annId}) => {\n    \n    const onDelete = annId => {\n        dispatch(deleteAnnouncement(annId));\n    }\n\n    return (\n        <Button\n            className=\"float-right ml-1\"\n            outline color=\"danger\"\n            onClick={() => onDelete(annId)}\n        >\n\n            <span className=\"fa fa-trash\" />\n        </Button>\n    );\n}\n\nexport default connect()(DeleteAnnouncement);\n","import React from 'react';\nimport { Card, CardHeader, CardText, CardBody, CardFooter } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { EditAnnouncement, DeleteAnnouncement } from '../Announcement_actions';\n\nconst RenderAnnouncement = ( props ) => {\n\n    return (\n        <div className={props.divClass}>\n            <Card\n                className={props.cardClass}\n                style={{\n                    borderRadius:'40px',\n                    border: '2px solid blue'\n                }}\n            >\n                <CardHeader tag=\"h3\">\n                    {props.deleteBtnNeeded ?\n                        <DeleteAnnouncement annId={props.ann.ID} />\n                        : null\n                    }\n                    {props.editBtnNeeded ?\n                        <EditAnnouncement ann={props.ann} />\n                        : null\n                    }\n                    <Link\n                        to={`/announcement/${props.ann.ID}`}\n                        style={{ textDecoration: 'none'}}\n                    >\n                        {props.ann.title}\n                    </Link>\n                </CardHeader>\n                <Link\n                    to={`/announcement/${props.ann.ID}`}\n                    style={{ textDecoration: 'none'}}\n                >\n                    <CardBody>\n                        <CardText>{\n                            props.fullText ?\n                                props.ann.description : props.ann.description.substring(0, 150) + \" ...\"}\n                        </CardText>\n                    </CardBody>\n                    <CardFooter\n                        className=\"text-muted text-right\"\n                    >\n                        {props.ann.edited ?\n                            <i className=\"text-danger\"> Edited on: &nbsp; </i> :\n                            <i className=\"text-info\"> Posted on: &nbsp; </i>\n                        }\n                        <b>{ props.ann.date}</b>\n                    </CardFooter>\n                </Link>\n            </Card>\n        </div>\n    );\n}\nexport default RenderAnnouncement;\n","import React from 'react';\nimport { AddAnnouncement } from '../Announcement_actions';\nimport { RenderAnnouncement } from '../components';\n\nconst AnnouncementList = (props) => {\n\n    const rendered_anns = props.announcements.map((ann) => {\n\n        return (\n            <div\n                className=\"col-6\"\n                key={ann.ID}\n            >\n                <RenderAnnouncement\n                    ann={ann}\n                    divClass=\"col-12 mt-5\"\n                    cardClass=\"text-center\"\n                    deleteBtnNeeded={true}\n                    fullText={false}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <AddAnnouncement />\n            <div className=\"row\">\n                {rendered_anns}\n            </div>\n        </div>\n    );\n}\n\nexport default AnnouncementList;\n","import React from 'react';\nimport { Navbar, NavbarBrand, Form, Input } from 'reactstrap';\n\n\nconst Header = (props) => {\n    return (\n        <>\n            <Navbar dark color=\"primary\">\n                <div className=\"container\">\n                    <NavbarBrand href=\"/\"> Announcement Website </NavbarBrand>\n                    {props.searchNeeded ?\n                    <Form>\n                        <Input\n                            type=\"search\"\n                            name=\"search\"\n                            id=\"search\"\n                            onChange={props.handleChange}\n                            placeholder=\"Search Announcement\"\n                        />\n                    </Form>\n                    : null}\n                </div>\n            </Navbar>\n        </>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { RenderAnnouncement, Header } from '../components';\nimport { FindSimilar } from '../Announcement_actions';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        announcements: state\n    }\n}\n\nconst AnnouncementDetailComponent = ({announcements, match }) => {\n\n    const { annId } = match.params;\n    const ann = announcements.announcements.find(ann => ann.ID === annId);\n    if(!ann) {\n        return (\n            <h3 class=\"text-center\"> Announcement Not Found :( </h3>\n        );\n    }\n\n    return (\n        <>\n            <Header />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\"> Go to announcement list! </Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active> {ann.title} </BreadcrumbItem>\n                    </Breadcrumb>\n                </div>\n                <RenderAnnouncement\n                    ann={ann}\n                    divClass=\"col-12 mt-5\"\n                    cardClass=\"text-center mt-2\"\n                    editBtnNeeded={true}\n                    fullText={true}\n                />\n\n                <div className=\"mt-5\">\n                    <Card className=\"text-center\">\n                        <CardHeader\n                            tag=\"h3\"\n                            className=\"mb-3, text-danger\"\n                        > Top 3 Similar Announcements </CardHeader>\n\n                        <FindSimilar\n                            announcements={announcements.announcements}\n                            selectedAnn={ann}\n                        />\n                    </Card>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default connect(mapStateToProps)(AnnouncementDetailComponent);\n","\nexport const selectAnnouncements = state => {\n    return state.announcements;\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { AnnouncementList, Header } from '../components';\nimport { selectAnnouncements } from '../redux/selectors';\n\nconst mapStateToProps = (state) => {\n    return {\n        announcements: selectAnnouncements(state)\n    }\n}\n\nconst Home = ({announcements}) => {\n    const [searchItem, setSearchItem] = useState('');\n\n    const handleChange = event => {\n        setSearchItem(event.target.value);\n    };\n\n    return (\n        <>\n            <Header\n                searchNeeded={true}\n                handleChange={handleChange}\n            />\n\n            <AnnouncementList\n                announcements={announcements.filter(\n                    ann => ann.title.toLowerCase().includes(searchItem.toLowerCase())\n                )} />\n        </>\n    );\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport {AnnouncementDetailComponent} from '../components';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport {Home} from '../Home';\n\n\nconst Main = () => {\n    return (\n        <div>\n            <Switch>\n                <Route\n                    path=\"/home\"\n                    component={() => <Home /> }\n                />\n\n                <Route\n                    path=\"/announcement/:annId\"\n                    component={AnnouncementDetailComponent}\n                />\n\n                <Redirect to=\"/home\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional  code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { nanoid } from '@reduxjs/toolkit';\nimport * as ActionTypes from './ActionTypes';\n\nconst initialState = {\n    announcements:[\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum? \",\n            description: \" Lorem Ipsum sdgd fgvdythjgvcw e \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum? \",\n            description: \" Lorem Ipsum is simply dummy text of the printing and typesetting industry. \" +\n                \"Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an \" +\n                \"unknown printer took a galley of type and scrambled it to make a type specimen book. \" +\n                \"It has survived not only five centuries, but also the leap into electronic typesetting, \" +\n                \"remaining essentially unchanged. It was popularised in the 1960s with the release of \" +\n                \"Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing \" +\n                \"software like Aldus PageMaker including versions of Lorem Ipsum. \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" Why do we use it? \",\n            description: \" It is a long established fact that a reader will be distracted by the readable content \" +\n                \"of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less \" +\n                \"normal distribution of letters, as opposed to using 'Content here, content here', making it look like \" +\n                \"readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their \" +\n                \"default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. \" +\n                \"Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected \" +\n                \"humour and the like). \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum? \",\n            description: \" Lorem Ipsum is simply dummy text of the printing and typesetting industry. \" +\n                \"Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an \" +\n                \"unknown printer took a galley of type and scrambled it to make a type specimen book. \" +\n                \"It has survived not only five centuries, but also the leap into electronic typesetting, \" +\n                \"remaining essentially unchanged. It was popularised in the 1960s with the release of \" +\n                \"Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing \" +\n                \"software like Aldus PageMaker including versions of Lorem Ipsum. \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" Why Learn ReactJS? \",\n            description: \" ReactJS offers graceful solutions to some of front-end programming’s \" +\n                \"most persistent issues, allowing you to build dynamic and interactive web apps with ease. \" +\n                \"It’s fast, scalable, flexible, powerful, and has a robust developer community that’s rapidly \" +\n                \"growing. There’s never been a better time to learn React. \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" Take-Away Skills: \",\n            description: \" You’ll develop a strong understanding of React’s most essential concepts: JSX, \" +\n                \"class and function components, props, state, lifecycle methods, and hooks. You’ll be able \" +\n                \"to combine these ideas in React’s modular programming style. \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" Why do we use it? \",\n            description: \" It is sjfgukesfv a long. \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum? \",\n            description: \" ssdfsdf8674sfsdf 88554\" +\n                \" Lorem Ipsum  \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" Why Learn ReactJS? \",\n            description: \" React846834JS offers \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum \",\n            description: \" Lorem7777 Ipsum \",\n            date: new Date().toDateString(),\n            edited: false\n        },\n        {\n            ID: nanoid(),\n            title: \" What is Lorem Ipsum \",\n            description: \" Lo777rem Ipsum \",\n            date: new Date().toDateString(),\n            edited: false\n        }\n    ]\n};\n\nexport const Reducers = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_ANNOUNCEMENT:\n            return Object.assign({}, state, {\n                announcements: [\n                    ...state.announcements,\n                    {\n                        ID: action.payload.ID,\n                        title: action.payload.title,\n                        description: action.payload.description,\n                        date: action.payload.date,\n                        edited: false\n                    }\n                ]\n            });\n\n        case ActionTypes.EDIT_ANNOUNCEMENT:\n            return Object.assign({}, state, {\n                announcements: state.announcements.map(ann => {\n                    if (ann.ID === action.payload.ID) {\n                        return Object.assign({}, ann, {\n                            title: action.payload.title,\n                            description: action.payload.description,\n                            edited: true\n                        });\n                    }\n                    return ann;\n                })\n            });\n\n        case ActionTypes.DELETE_ANNOUNCEMENT:\n            return {\n                announcements: state.announcements.filter(ann => ann.ID !== action.payload)\n            };\n\n        default:\n            return state;\n    }\n}\n","\nimport { createStore } from 'redux';\nimport { Reducers } from './reducers';\n\nexport const store = createStore(Reducers);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/configureStore';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}